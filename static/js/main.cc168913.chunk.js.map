{"version":3,"sources":["Components/Api/api.js","Components/Button/button.styled.js","Components/Button/button.js","Components/ImageGalleryItems/ImageGalleryItems.styled.js","Components/ImageGalleryItems/ImageGalleryItems.js","Components/ImageGalleryList/ImageGalleryList.styled.js","Components/ImageGalleryList/ImageGalleryList.js","Components/Loader/Loader.js","Components/Modal/Modal.styled.js","Components/Modal/Modal.js","Components/SearchBar/SearchBar.styled.js","Components/SearchBar/SearchBar.js","Components/App/App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","query","page","a","get","q","response","data","hits","Error","propTypes","PropTypes","string","isRequired","number","StyledLoadMoreBtn","styled","button","LoadMoreBtn","onClick","type","ImageGalleryItem","li","GalleryImage","img","ImageGalleryItems","webFormatUrl","largeImageUrl","tags","onImageClick","src","alt","ImageGalleryList","ul","ImageGallery","images","map","id","webformatURL","largeImageURL","OnLoading","LoadContainer","color","height","width","timeout","Component","div","Overlay","StyledModal","Modal","clickOnEsc","e","code","props","toggleModal","clickOnOverlay","target","currentTarget","window","addEventListener","this","url","SearchBarHeader","header","SearchBarForm","form","SearchBarButton","SearchBarButtonLabel","span","SearchFormInput","input","SearchBar","state","searchQuery","onInputChange","setState","value","onInputSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","App","isLoading","largeImage","showModal","then","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","loadMore","prevProps","prevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc168913.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '22670209-9efd588e2ff75ea334072990b';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: '12',\n};\n\nexport const fetchImages = async (query, page) => {\n  try {\n    const response = await axios.get('', {\n      params: {\n        page: page,\n        q: query,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nfetchImages.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  margin: 12px auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import { StyledLoadMoreBtn } from './button.styled';\nimport PropTypes from 'prop-types';\n\nexport const LoadMoreBtn = ({ onClick }) => {\n  return (\n    <StyledLoadMoreBtn type=\"button\" onClick={onClick}>\n      Load more\n    </StyledLoadMoreBtn>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const GalleryImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { GalleryImage, ImageGalleryItem } from './ImageGalleryItems.styled';\n\nexport const ImageGalleryItems = ({ webFormatUrl, largeImageUrl, tags, onImageClick }) => {\n  return (\n    <ImageGalleryItem>\n      <GalleryImage src={webFormatUrl} alt={tags} onClick={() => onImageClick(largeImageUrl)} />\n    </ImageGalleryItem>\n  );\n};\n\nImageGalleryItems.propTypes = {\n  webFormatUrl: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItems } from 'Components/ImageGalleryItems/ImageGalleryItems';\nimport { ImageGalleryList } from './ImageGalleryList.styled';\n\nexport const ImageGallery = ({ images, onImageClick }) => {\n  return (\n    <ImageGalleryList>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItems\n          key={id}\n          webFormatUrl={webformatURL}\n          largeImageUrl={largeImageURL}\n          tags={tags}\n          onImageClick={onImageClick}\n        />\n      ))}\n    </ImageGalleryList>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class OnLoading extends Component {\n  //other logic\n  render() {\n    return (\n      <LoadContainer>\n        <Loader type=\"Hearts\" color=\"#3f51b5\" height={120} width={120} timeout={3000} />\n      </LoadContainer>\n    );\n  }\n}\n\nconst LoadContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const StyledModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Overlay, StyledModal } from './Modal.styled';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.clickOnEsc);\n  }\n\n  componentWillUnmount() {\n    window.addEventListener('keydown', this.clickOnEsc);\n  }\n\n  clickOnEsc = e => {\n    e.code === 'Escape' && this.props.toggleModal();\n  };\n\n  clickOnOverlay = e => {\n    e.target === e.currentTarget && this.props.toggleModal();\n  };\n\n  render() {\n    return (\n      <Overlay onClick={this.clickOnOverlay}>\n        <StyledModal>\n          <img src={this.props.url} alt=\"\" />\n        </StyledModal>\n      </Overlay>\n    );\n  }\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchBarForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBarButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchBarButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  SearchBarButton,\n  SearchBarForm,\n  SearchBarHeader,\n  SearchBarButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport default class SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  onInputChange = e => {\n    this.setState({ searchQuery: e.currentTarget.value });\n  };\n\n  onInputSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <SearchBarHeader>\n        <SearchBarForm onSubmit={this.onInputSubmit}>\n          <SearchBarButton type=\"submit\">\n            <SearchBarButtonLabel>Search</SearchBarButtonLabel>\n          </SearchBarButton>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            onChange={this.onInputChange}\n          />\n        </SearchBarForm>\n      </SearchBarHeader>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchImages } from 'Components/Api/api';\nimport { LoadMoreBtn } from 'Components/Button/button';\nimport { ImageGallery } from 'Components/ImageGalleryList/ImageGalleryList';\nimport OnLoading from 'Components/Loader/Loader';\nimport Modal from 'Components/Modal/Modal';\nimport SearchBar from 'Components/SearchBar/SearchBar';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    isLoading: false,\n    largeImage: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { query, page } = this.state;\n    this.setState({ isLoading: true });\n    return fetchImages(query, page)\n      .then(data => {\n        this.setState(({ images, page }) => ({\n          images: [...images, ...data],\n          page: page + 1,\n          isLoading: false,\n        }));\n      })\n      .finally(() => this.scrollTo());\n  };\n\n  onInputChange = query => {\n    this.setState({ images: [], query: query, page: 1 });\n  };\n\n  onImageClick = largeImageUrl => {\n    this.setState({ largeImage: largeImageUrl, showModal: true });\n  };\n\n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  loadMore = () => {\n    this.fetchImages(this.state.query);\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar onSubmit={this.onInputChange}></SearchBar>\n\n        <ImageGallery images={this.state.images} onImageClick={this.onImageClick} />\n\n        {this.state.isLoading && <OnLoading />}\n\n        {this.state.images.length > 0 && <LoadMoreBtn onClick={this.loadMore} />}\n\n        {this.state.showModal && (\n          <Modal toggleModal={this.toggleModal} url={this.state.largeImage} />\n        )}\n      </>\n    );\n  }\n}\n","import App from 'Components/App/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}